{"version":3,"sources":["components/Tabgroup.js","components/Checkbox.js","components/CheckboxGroup.js","components/Bin-converter.js","components/Qrcode.js","components/Stopwatch.js","components/Weathercards.js","components/AirQuality.js","components/Filehash.js","containers/App.js","index.js"],"names":["TabGroup","tabitmes","this","props","titleArr","map","item","idx","style","bgcolor","name","panelArr","panel","defaultIndex","Component","Checkbox","label","isSelected","onCheckboxChange","className","type","checked","onChange","CheckboxGroup","checkedArr","handler","base","checkboxArr","index","toString","padStart","BinConverter","useState","bitsVal","setBitsVal","binValue","setBinValue","decValue","setDecValue","hexValue","setHexValue","Array","fill","setCheckedArr","useEffect","toUpperCase","handleCheckboxChange","event","Number","target","newCheckedArr","newBitsVal","val","Math","pow","OutputTable","readOnly","maxLength","size","value","slice","onClick","x","tmp","i","random","push","QRcode","imgsrc","setImgsrc","inputText","setInputtext","log","setLog","inputHandler","key","preventDefault","qrcodeHandler","length","QRcodeLib","toDataURL","then","url","catch","err","console","rows","cols","onKeyDown","src","alt","width","timerID","tTotalStart","tTotalElpased","tLapStart","tPrevElpased","startButtonState","resultIndex","totalStr","lapStr","Stopwatch","totalTime","setTotalTime","lapTime","setLapTime","startButtonText","setStartButtonText","resultRows","setResultRows","enBtnReset","setEnBtnReset","enBtnStart","setEnBtnStart","enBtnLap","setEnBtnLap","makeTimeString","updateTime","t","tMili","tSec","handlePause","clearInterval","addResult","total","lap","newRow","disabled","Date","getTime","setInterval","timeElapseLAP","locationArr","Weathercard","locRecord","weatherElement","w","time","parameter","parameterName","wx","pop","mint","ci","maxt","startTime","endTime","wxIndex","parameterValue","titleTimeString","substring","replace","title","getTimeString","getWxImgUrl","height","start","end","tzoffset","getTimezoneOffset","today","now","toISOString","split","sDate","sHour","process","findLocationRecord","records","locName","retObj","location","some","loc","locationName","Object","assign","Weathercards","setLocation","gRecords","setRecords","fetch","encodeURI","data","json","locationRecord","e","siteArr","keys","AirQuality","gLocation","gSite","setSite","DropdownMenu","AirQualityInfoCard","record","forEach","r","SiteName","County","rowSpan","INIT_STATE","md5","sha256","crc32","Filehash","hashResult","setHashResult","fileBuf","setFilebuf","fileName","useRef","hashStatus","setHashStatus","enBtnGo","setenBtnGo","handleGo","a","newHashResult","Promise","all","values","current","handleChooseFile","files","reader","FileReader","onerror","onload","Uint8Array","result","readAsArrayBuffer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.195a9f02.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\n\r\nclass TabGroup extends Component {\r\n\r\n\r\n  render() {\r\n    const { tabitmes } = this.props\r\n\r\n    const titleArr = tabitmes.map((item, idx) => {\r\n      return <Tab style={{ \"background\": item.bgcolor }} key={idx}>{item.name}</Tab>\r\n    })\r\n\r\n    const panelArr = tabitmes.map((item, idx) => {\r\n      return <TabPanel key={idx}>{item.panel}</TabPanel>\r\n    })\r\n\r\n    return (\r\n      < Tabs defaultIndex={0} >\r\n        <TabList>\r\n          {titleArr}\r\n        </TabList>\r\n\r\n        {panelArr}\r\n      </Tabs >\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default TabGroup\r\n","import React from 'react'\r\n\r\nconst Checkbox = ({ label, isSelected, onCheckboxChange }) => (\r\n  <div className=\"flex flex-column pa1 items-center\">\r\n    <label>{label}</label>\r\n    <input\r\n      type=\"checkbox\"\r\n      name={label}\r\n      checked={isSelected}\r\n      onChange={onCheckboxChange}\r\n    />\r\n  </div>\r\n\r\n)\r\n\r\nexport default Checkbox","import React from 'react'\r\nimport Checkbox from './Checkbox'\r\n\r\nconst CheckboxGroup = ({ checkedArr, handler, base }) => {\r\n  const checkboxArr = checkedArr.map((checked, index) => {\r\n    return <Checkbox\r\n      label={(base + index).toString(10).padStart(2, \"0\")}\r\n      isSelected={checked}\r\n      onCheckboxChange={handler}\r\n      key={(base + index).toString(10).padStart(2, \"0\")}\r\n    />\r\n  })\r\n\r\n  return (\r\n    <div className=\"flex flex-row-reverse ma1 justify-center\">\r\n      {checkboxArr}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckboxGroup","import React, { useState, useEffect } from \"react\"\r\nimport CheckboxGroup from './CheckboxGroup'\r\n\r\nconst BinConverter = () => {\r\n  // data flow: checkboxes/buttons => bitsVal => useEffect\r\n\r\n  const [bitsVal, setBitsVal] = useState(0)\r\n  const [binValue, setBinValue] = useState(\"\")\r\n  const [decValue, setDecValue] = useState(\"\")\r\n  const [hexValue, setHexValue] = useState(\"\")\r\n  const [checkedArr, setCheckedArr] = useState(Array(32).fill(false))\r\n\r\n  useEffect(() => {\r\n\r\n    setBitsVal(bitsVal)\r\n    setBinValue(bitsVal.toString(2).toUpperCase().padStart(32, \"0\"))\r\n    setDecValue(bitsVal.toString(10).toUpperCase().padStart(10, \"0\"))\r\n    setHexValue(bitsVal.toString(16).toUpperCase().padStart(8, \"0\"))\r\n\r\n  }, [bitsVal])\r\n\r\n  const handleCheckboxChange = (event) => {\r\n    const index = Number(event.target.name)\r\n    const newCheckedArr = [...checkedArr]  // clone\r\n    newCheckedArr[index] = !newCheckedArr[index]  // toggle\r\n\r\n    // handle checkboxes\r\n    setCheckedArr(newCheckedArr)\r\n\r\n    // handle bitsVal\r\n    let newBitsVal = bitsVal\r\n    const val = Math.pow(2, index)\r\n    newCheckedArr[index] ? newBitsVal = bitsVal + val : newBitsVal = bitsVal - val\r\n    setBitsVal(newBitsVal)\r\n  }\r\n\r\n  const handleToggle = () => {\r\n    let newBitsVal = 0\r\n    let newCheckedArr = checkedArr.map((x, index) => {\r\n      const tmp = Math.pow(2, index)\r\n      if (!x) newBitsVal += tmp\r\n      return !x\r\n    })\r\n\r\n    setBitsVal(newBitsVal)\r\n    setCheckedArr(newCheckedArr)\r\n  }\r\n\r\n  const handleRandomize = () => {\r\n    let newBitsVal = 0\r\n    let newCheckedArr = []\r\n    for (let i = 0; i < 32; i++) {\r\n      let random = Math.random() > 0.5 ? true : false\r\n      newCheckedArr.push(random)\r\n      if (random) {\r\n        newBitsVal += Math.pow(2, i)\r\n      }\r\n    }\r\n\r\n    setBitsVal(newBitsVal)\r\n    setCheckedArr(newCheckedArr)\r\n  }\r\n\r\n\r\n  const handleResetAll = () => {\r\n    setBitsVal(0)\r\n    setCheckedArr(Array(32).fill(false))\r\n  }\r\n\r\n\r\n  const handleCheckAll = () => {\r\n    setBitsVal(0xFFFFFFFF)\r\n    setCheckedArr(Array(32).fill(true))\r\n  }\r\n\r\n  const OutputTable = () => {\r\n    return <table className=\"center\">\r\n      <tbody>\r\n        <tr>\r\n          <td>Bin</td>\r\n          <td>\r\n            <input type=\"text\" name=\"binary24\" readOnly={true} maxLength=\"10\" size=\"10\" style={{ \"textAlign\": \"right\" }}\r\n              value={binValue.slice(0, 8)} />\r\n          </td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <td></td>\r\n          <td>\r\n            <input type=\"text\" name=\"binary16\" readOnly={true} maxLength=\"10\" size=\"10\" style={{ \"textAlign\": \"right\" }}\r\n              value={binValue.slice(8, 16)} />\r\n          </td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <td></td>\r\n          <td>\r\n            <input type=\"text\" name=\"binary08\" readOnly={true} maxLength=\"10\" size=\"10\" style={{ \"textAlign\": \"right\" }}\r\n              value={binValue.slice(16, 24)} />\r\n          </td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <td></td>\r\n          <td>\r\n            <input type=\"text\" name=\"binary00\" readOnly={true} maxLength=\"10\" size=\"10\" style={{ \"textAlign\": \"right\" }}\r\n              value={binValue.slice(24, 32)} />\r\n          </td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <td>Dec</td>\r\n          <td>\r\n            <input type=\"text\" name=\"decimal\" readOnly={true} maxLength=\"10\" size=\"10\" style={{ \"textAlign\": \"right\" }}\r\n              value={decValue} />\r\n          </td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <td>Hex</td>\r\n          <td>\r\n            <input type=\"text\" name=\"Hex\" readOnly={true} maxLength=\"10\" size=\"10\" style={{ \"textAlign\": \"right\" }}\r\n              value={hexValue} />\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"flex flex-column justify-center center w-60\">\r\n      <fieldset className=\"ba br3 ma3\">\r\n        <legend>Inputs</legend>\r\n        <CheckboxGroup\r\n          checkedArr={checkedArr.slice(24, 32)}\r\n          handler={handleCheckboxChange}\r\n          base={24}\r\n        />\r\n\r\n        <CheckboxGroup\r\n          checkedArr={checkedArr.slice(16, 24)}\r\n          handler={handleCheckboxChange}\r\n          base={16}\r\n        />\r\n\r\n        <CheckboxGroup\r\n          checkedArr={checkedArr.slice(8, 16)}\r\n          handler={handleCheckboxChange}\r\n          base={8}\r\n        />\r\n\r\n        <CheckboxGroup\r\n          checkedArr={checkedArr.slice(0, 8)}\r\n          handler={handleCheckboxChange}\r\n          base={0}\r\n        />\r\n      </fieldset>\r\n\r\n      <fieldset className=\"ba br3 ma3 f5\">\r\n        <legend>Outputs</legend>\r\n        <OutputTable />\r\n      </fieldset>\r\n\r\n      <fieldset className=\"ba br3 ma3\">\r\n        <legend>Buttons</legend>\r\n\r\n        <div className=\"flex flex-row\">\r\n          <button className=\"br3 ma1 pointer w-50\" onClick={handleToggle}>\r\n            Toggle\r\n          </button>\r\n\r\n          <button className=\"br3 ma1 pointer w-50\" onClick={handleRandomize}>\r\n            Randomize\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"flex flex-row\">\r\n          <button className=\"br3 ma1 pointer  w-50\" onClick={handleResetAll}>\r\n            Reset all\r\n          </button>\r\n\r\n          <button className=\"br3 ma1 pointer  w-50\" onClick={handleCheckAll}>\r\n            Check all\r\n          </button>\r\n        </div>\r\n\r\n\r\n\r\n      </fieldset>\r\n    </div >\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default BinConverter\r\n","import React, { useState } from \"react\"\r\nimport QRcodeLib from 'qrcode'\r\n\r\nconst QRcode = () => {\r\n\r\n  const [imgsrc, setImgsrc] = useState(\"\")\r\n  const [inputText, setInputtext] = useState(\"\")\r\n  const [log, setLog] = useState(\"\")\r\n\r\n  const inputHandler = (event) => {\r\n\r\n    switch (event.type) {\r\n      case \"keydown\":\r\n        if (event.key === \"Enter\") {\r\n          event.preventDefault()\r\n          qrcodeHandler()\r\n        }\r\n        break\r\n\r\n      case \"change\":\r\n        setInputtext(event.target.value)\r\n        break\r\n\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  const clearHandler = (event) => {\r\n    setImgsrc(\"\")\r\n    setInputtext(\"\")\r\n    setLog(\"\")\r\n  }\r\n\r\n  const qrcodeHandler = () => {\r\n    if (inputText.length === 0) {\r\n      setImgsrc(\"\")\r\n      setLog(\"No input\")\r\n      return\r\n    }\r\n\r\n    QRcodeLib.toDataURL(inputText)\r\n      .then(url => {\r\n        setImgsrc(url)\r\n        setLog(inputText.length)\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"flex flex-column justify-center center w-60\">\r\n      <fieldset className=\"ba br3 ma3\">\r\n        <legend> Input String </legend>\r\n        <textarea\r\n          className=\"tc f5 br3 center w-100\"\r\n          rows=\"8\"\r\n          cols=\"32\"\r\n          maxLength=\"256\"\r\n          value={inputText}\r\n          onChange={inputHandler}\r\n          onKeyDown={inputHandler}\r\n        >\r\n        </textarea>\r\n        <div className=\"flex center w-100\">\r\n          <button className=\"pa1 ma1 br3 w-50\" onClick={qrcodeHandler} > GO </button>\r\n          <button className=\"pa1 ma1 br3 w-50\" onClick={clearHandler} > Clear </button>\r\n        </div>\r\n\r\n      </fieldset>\r\n\r\n      <fieldset className=\"ba br3 ma3 \">\r\n        <legend> QR Code </legend>\r\n        <img className=\"center\" src={imgsrc} alt=\"\" width=\"80%\" />\r\n        <h2 className=\"center\">{log}</h2>\r\n      </fieldset>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default QRcode\r\n","import { useState, useEffect } from \"react\"\r\n\r\nlet timerID = null\r\nlet tTotalStart = 0\r\nlet tTotalElpased = 0\r\nlet tLapStart = 0\r\nlet tPrevElpased = 0\r\nlet startButtonState = \"start\"\r\nlet resultIndex = 0\r\nlet totalStr = \"\"\r\nlet lapStr = \"\"\r\n\r\nconst Stopwatch = () => {\r\n\r\n  const [totalTime, setTotalTime] = useState(\"\")\r\n  const [lapTime, setLapTime] = useState(\"\")\r\n  const [startButtonText, setStartButtonText] = useState(\"Start\")\r\n  const [resultRows, setResultRows] = useState(<tr></tr>)\r\n  const [enBtnReset, setEnBtnReset] = useState(false)\r\n  const [enBtnStart, setEnBtnStart] = useState(true)\r\n  const [enBtnLap, setEnBtnLap] = useState(false)\r\n\r\n\r\n  useEffect(() => {\r\n    totalStr = makeTimeString(0)\r\n    lapStr = makeTimeString(0)\r\n    updateTime()\r\n  }, [])\r\n\r\n  const makeTimeString = (t) => {\r\n\r\n    const tMili = t % 1000\r\n    t = (t - tMili) / 1000 // convert t to second\r\n    const tSec = t % 60\r\n    const tMin = (t - tSec) / 60\r\n\r\n    return `${tMin.toString(10).padStart(2, \"0\")}:${tSec.toString(10).padStart(2, \"0\")}.${tMili.toString(10).padStart(3, \"0\")}`\r\n  }\r\n\r\n\r\n  const updateTime = () => {\r\n    setTotalTime(totalStr)\r\n    setLapTime(lapStr)\r\n  }\r\n\r\n  const handleStart = () => {\r\n\r\n    switch (startButtonState) {\r\n      case \"start\":\r\n\r\n        tTotalStart = new Date().getTime()\r\n        tLapStart = tTotalStart\r\n\r\n        timerID = setInterval(() => {\r\n          tTotalElpased = new Date().getTime() - tTotalStart + tPrevElpased\r\n          let timeElapseLAP = new Date().getTime() - tLapStart\r\n\r\n          totalStr = makeTimeString(tTotalElpased)\r\n          lapStr = makeTimeString(timeElapseLAP)\r\n\r\n          updateTime()\r\n        }, 10)\r\n\r\n        setStartButtonText(\"Stop\")\r\n        startButtonState = \"stop\"\r\n\r\n        setEnBtnReset(true)\r\n        setEnBtnStart(true)\r\n        setEnBtnLap(true)\r\n        break\r\n\r\n      case \"stop\":\r\n        handlePause()\r\n        break\r\n\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  const handlePause = () => {\r\n    if (timerID != null) {\r\n      clearInterval(timerID)\r\n      timerID = null\r\n    }\r\n\r\n    tPrevElpased = tTotalElpased\r\n    startButtonState = \"start\"\r\n    setStartButtonText(\"Start\")\r\n\r\n    updateTime()\r\n\r\n    setEnBtnReset(true)\r\n    setEnBtnStart(true)\r\n    setEnBtnLap(false)\r\n\r\n    addResult(resultIndex++, totalStr, lapStr)\r\n  }\r\n\r\n  const handleLap = () => {\r\n    tLapStart = new Date().getTime()\r\n    addResult(resultIndex++, totalStr, lapStr)\r\n  }\r\n\r\n  const handleReset = () => {\r\n    if (timerID != null) {\r\n      clearInterval(timerID)\r\n      timerID = null\r\n    }\r\n    tTotalStart = 0\r\n    tTotalElpased = 0\r\n    tLapStart = 0\r\n    tPrevElpased = 0\r\n    startButtonState = \"start\"\r\n    resultIndex = 0\r\n    totalStr = makeTimeString(0)\r\n    lapStr = makeTimeString(0)\r\n    updateTime()\r\n    setStartButtonText(\"Start\")\r\n\r\n    setResultRows([])\r\n    setEnBtnReset(false)\r\n    setEnBtnStart(true)\r\n    setEnBtnLap(false)\r\n  }\r\n\r\n\r\n  const addResult = (index, total, lap) => {\r\n    // make one table row\r\n    const newRow = <tr key=\"index\">\r\n      <td className=\"bg-light-red\">{`#${(index + 1).toString().padStart(2, \"0\")}`}</td>\r\n      <td className=\"bg-light-green\">{total}</td>\r\n      <td className=\"bg-light-blue\">{lap}</td>\r\n    </tr>\r\n\r\n    setResultRows([newRow, resultRows])\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"flex flex-column justify-center center w-60\">\r\n      <fieldset className=\"ba br3 ma3\">\r\n        <fieldset className=\"br3\">\r\n          <legend>Total</legend>\r\n          <h2>{totalTime}</h2>\r\n        </fieldset>\r\n        <fieldset className=\"br3\">\r\n          <legend>LAP</legend>\r\n          <h2>{lapTime}</h2>\r\n        </fieldset>\r\n      </fieldset>\r\n\r\n      <fieldset className=\"ba br3 ma3\">\r\n        <button\r\n          className=\"br3 pa2 ma2\"\r\n          disabled={!enBtnReset}\r\n          onClick={handleReset}\r\n        >\r\n          Reset\r\n          </button>\r\n\r\n        <button\r\n          className=\"br3 pa2 ma2\"\r\n          disabled={!enBtnStart}\r\n          onClick={handleStart}>\r\n          {startButtonText}\r\n        </button>\r\n\r\n        <button\r\n          className=\"br3 pa2 ma2\"\r\n          disabled={!enBtnLap}\r\n          onClick={handleLap}>\r\n          LAP\r\n          </button>\r\n      </fieldset>\r\n\r\n      <fieldset className=\"ba br3 ma3\">\r\n        <legend> Results </legend>\r\n        <table className=\"center f5\">\r\n          <thead>\r\n            <tr>\r\n              <td>No.</td>\r\n              <td>Total</td>\r\n              <td>LAP</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {resultRows}\r\n          </tbody>\r\n        </table>\r\n      </fieldset>\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Stopwatch\r\n","import React, { useState, useEffect } from 'react'\r\n\r\n//const API_WEATHERFC_URL = \"https://simple-utility-api.herokuapp.com/weatherfc\"\r\n//const API_WEATHERFC_URL = \"http://127.0.0.1:3001/weatherfc\"\r\nconst API_WEATHERFC_URL = \"https://www.ychsiao168.idv.tw:5001/weatherfc/\"\r\nconst locationArr = [\r\n  \"基隆市\", \"臺北市\", \"新北市\", \"桃園市\",\r\n  \"新竹市\", \"新竹縣\", \"苗栗縣\", \"臺中市\",\r\n  \"彰化縣\", \"南投縣\", \"雲林縣\", \"嘉義市\",\r\n  \"嘉義縣\", \"臺南市\", \"高雄市\", \"屏東縣\",\r\n  \"宜蘭縣\", \"花蓮縣\", \"臺東縣\", \"澎湖縣\",\r\n  \"金門縣\", \"連江縣\",\r\n]\r\n\r\n\r\nconst Weathercards = () => {\r\n\r\n  const [location, setLocation] = useState(\"臺北市\"); // default location\r\n  const [gRecords, setRecords] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(encodeURI(`${API_WEATHERFC_URL}/`))\r\n      .then(data => data.json())\r\n      .then(({ records }) => {\r\n        setRecords(records)\r\n      })\r\n      .catch(err => console.log(err))\r\n\r\n  }, [])\r\n\r\n  if (!gRecords) {\r\n    return <div>Loading</div>\r\n  }\r\n\r\n\r\n  const locationRecord = findLocationRecord(gRecords, location)\r\n  const { locationName } = locationRecord\r\n\r\n  return (\r\n    <div>\r\n      <select\r\n        className=\"pa3 ma3 br3 w-40\"\r\n        onChange={(e) => { setLocation(e.target.value) }}\r\n        value={location}\r\n      >\r\n        <option value=\"\" disabled>選擇縣市</option>\r\n        {\r\n          locationArr.map((loc, idx) => (\r\n            <option value={loc} key={idx}>{loc}</option>\r\n          ))\r\n        }\r\n      </select>\r\n\r\n      <fieldset className=\"flex flex-row flex-wrap justify-center center pa3 ma3 br3 w-40\">\r\n        <legend>{locationName}</legend>\r\n        <Weathercard locRecord={locationRecord} index={0} />\r\n        <Weathercard locRecord={locationRecord} index={1} />\r\n        <Weathercard locRecord={locationRecord} index={2} />\r\n      </fieldset>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst Weathercard = ({ locRecord, index }) => {\r\n\r\n  if (!locRecord) {\r\n    return <div></div>\r\n  }\r\n\r\n  const { weatherElement } = locRecord\r\n\r\n  const [wx, pop, mint, ci, maxt] = weatherElement.map(w => (w.time[index].parameter.parameterName))\r\n\r\n  const { startTime, endTime } = weatherElement[0].time[index]\r\n  const wxIndex = weatherElement[0].time[index].parameter.parameterValue\r\n  const titleTimeString =\r\n    `${startTime.substring(5, 16).replace(\"-\", \"/\").replace(\" \", \"-\")} ~ \\\r\n${endTime.substring(5, 16).replace(\"-\", \"/\").replace(\" \", \"-\")}`\r\n\r\n  return (\r\n    <div className=\"flex flex-column ma3 br3 pa3 bg-near-white\" style={{ \"width\": \"150px\", \"height\": \"200px\" }}>\r\n      <div title={titleTimeString}> {getTimeString(startTime, endTime)} </div>\r\n      <img src={getWxImgUrl(wxIndex)} alt={wx} title={wx} height=\"100px\" />\r\n      <div>🌡️ {mint} - {maxt}℃</div>\r\n      <div>☂ {pop}%</div>\r\n      <div>{ci}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst getTimeString = (start, end) => {\r\n  const tzoffset = (new Date()).getTimezoneOffset() * 60000; //offset in milliseconds\r\n  const today = (new Date(Date.now() - tzoffset)).toISOString().substring(0, 10)\r\n  const [sDate, sHour] = start.split(\" \")\r\n\r\n  if (sDate === today && (sHour === \"06:00:00\" || sHour === \"12:00:00\")) {\r\n    return (\"今日白天\")\r\n  } else if (sDate === today && sHour === \"00:00:00\") {\r\n    return (\"今日凌晨\")\r\n  } else if (sDate === today && sHour === \"18:00:00\") {\r\n    return (\"今晚明晨\")\r\n  } else if (sDate !== today && sHour === \"06:00:00\") {\r\n    return (\"明日白天\")\r\n  } else if (sDate !== today && sHour === \"18:00:00\") {\r\n    return (\"明日晚上\")\r\n  } else {\r\n    console.log(\"〇〇〇〇\", today, sDate, sHour)\r\n    return (\"〇〇〇〇\")\r\n  }\r\n}\r\n\r\nconst getWxImgUrl = (index) => {\r\n  return `${process.env.PUBLIC_URL}/images/${index.toString().padStart(2, \"0\")}.svg`\r\n}\r\n\r\nconst findLocationRecord = (records, locName) => {\r\n  let retObj = null\r\n  records.location.some(loc => {\r\n    if (loc.locationName === locName) {\r\n      retObj = Object.assign({}, loc)\r\n      return true // it's break\r\n    }\r\n    return false  // it's continue\r\n  })\r\n\r\n  return retObj\r\n}\r\n\r\nexport default Weathercards","import React, { useState, useEffect } from 'react'\r\n\r\n//const API_AQ_URL = \"https://simple-utility-api.herokuapp.com/epadata/aqx_p_432\"\r\n//const API_WEATHERFC_URL = \"http://127.0.0.1:3001/epadata/aqx_p_432\"\r\nconst API_AQ_URL = \"https://www.ychsiao168.idv.tw:5001/epadata/aqx_p_432\"\r\n\r\nconst siteArr = {\r\n  \"基隆市\": [\"基隆\"],\r\n  \"臺北市\": [\"士林\", \"大同\", \"中山\", \"古亭\", \"松山\", \"陽明\", \"萬華\"],\r\n  \"新北市\": [\"汐止\", \"萬里\", \"新店\", \"土城\", \"板橋\", \"新莊\", \"菜寮\", \"林口\", \"淡水\", \"三重\", \"永和\", \"富貴角\", \"新北(樹林)\", \"永和(環河)\"],\r\n  \"南投縣\": [\"南投\", \"竹山\", \"埔里\"],\r\n  \"嘉義市\": [\"嘉義\"],\r\n  \"嘉義縣\": [\"新港\", \"朴子\"],\r\n  \"宜蘭縣\": [\"宜蘭\", \"冬山\"],\r\n  \"屏東縣\": [\"屏東\", \"潮州\", \"恆春\", \"屏東(琉球)\", \"屏東(枋寮)\"],\r\n  \"彰化縣\": [\"彰化\", \"線西\", \"二林\", \"彰化(員林)\", \"彰化(大城)\"],\r\n  \"新竹市\": [\"新竹\"],\r\n  \"新竹縣\": [\"湖口\", \"竹東\"],\r\n  \"桃園市\": [\"桃園\", \"大園\", \"觀音\", \"平鎮\", \"龍潭\", \"中壢\"],\r\n  \"澎湖縣\": [\"馬公\"],\r\n  \"臺中市\": [\"豐原\", \"沙鹿\", \"大里\", \"忠明\", \"西屯\"],\r\n  \"臺南市\": [\"新營\", \"善化\", \"安南\", \"臺南\", \"臺南(麻豆)\", \"臺南(北門)\"],\r\n  \"臺東縣\": [\"臺東\", \"關山\"],\r\n  \"花蓮縣\": [\"花蓮\"],\r\n  \"苗栗縣\": [\"頭份\", \"苗栗\", \"三義\"],\r\n  \"連江縣\": [\"馬祖\"],\r\n  \"金門縣\": [\"金門\"],\r\n  \"雲林縣\": [\"斗六\", \"崙背\", \"臺西\", \"麥寮\"],\r\n  \"高雄市\": [\"美濃\", \"橋頭\", \"仁武\", \"鳳山\", \"大寮\", \"林園\", \"楠梓\", \"左營\", \"前金\", \"前鎮\", \"小港\", \"復興\"],\r\n}\r\n\r\nconst locationArr = Object.keys(siteArr)\r\n\r\n\r\nconst AirQuality = () => {\r\n\r\n  const [gRecords, setRecords] = useState({})\r\n  const [gLocation, setLocation] = useState(locationArr[0])\r\n  const [gSite, setSite] = useState(siteArr[locationArr[0]][0])\r\n\r\n  useEffect(() => {\r\n    // do once only\r\n    // console.log(\"Fetching\")\r\n    fetch(encodeURI(API_AQ_URL))\r\n      .then(data => data.json())\r\n      .then(({ records }) => {\r\n        setRecords(records)\r\n\r\n        // get all locations and sites  // TODO\r\n        // let ttt = {}\r\n        // let count = 0\r\n        // records.forEach(x => {\r\n        //   const county = x.County\r\n        //   const site = x.SiteName\r\n        //   if (!ttt[county]) {\r\n        //     ttt[county] = []\r\n        //     ttt[county].push(site)\r\n        //   } else {\r\n        //     ttt[county].push(site)\r\n        //   }\r\n        //   count++\r\n        // })\r\n        // console.log(ttt, count)\r\n        // end\r\n      })\r\n      .catch(err => console.log(err))\r\n\r\n  }, [])\r\n\r\n  const DropdownMenu = () => {\r\n\r\n    return (\r\n      <fieldset className=\"flex flex-row flex-wrap w-60 center justify-center br3\">\r\n        <legend> 測站 </legend>\r\n        <select\r\n          className=\"pa2 ma2 br3\"\r\n          onChange={e => {\r\n            //console.log(\"Location onChange\", e.target.value, siteArr[e.target.value][0])\r\n            setLocation(e.target.value);\r\n            setSite(siteArr[e.target.value][0])\r\n          }}\r\n          value={gLocation}\r\n        >\r\n          <option value=\"\" disabled>選擇縣市</option>\r\n          {\r\n            locationArr.map((loc, idx) => (\r\n              <option value={loc} key={idx}>{loc}</option>\r\n            ))\r\n          }\r\n        </select>\r\n\r\n        <select\r\n          className=\"pa2 ma2 br3\"\r\n          onChange={e => setSite(e.target.value)}\r\n          value={gSite}\r\n        >\r\n          <option value=\"\" disabled>選擇測站</option>\r\n          {\r\n            siteArr[gLocation].map((loc, idx) => (\r\n              <option value={loc} key={idx}>{loc}</option>\r\n            ))\r\n          }\r\n        </select>\r\n\r\n      </fieldset >\r\n    )\r\n  }\r\n\r\n\r\n  const AirQualityInfoCard = ({ records }) => {\r\n\r\n    let record = null\r\n\r\n    if (records.length) {\r\n      records.forEach(r => {\r\n        if (r.SiteName === gSite && r.County === gLocation) {\r\n          record = r\r\n        }\r\n      })\r\n    }\r\n\r\n\r\n    if (!record) {\r\n      return <div>Loading</div>\r\n    }\r\n\r\n\r\n    return (\r\n      <fieldset className=\"flex flex-column w-60 center justify-center ma2 pa2 br3\">\r\n        {record[\"PublishTime\"]} <br></br><br></br>\r\n        <div className=\"ba br3\">\r\n          {record[\"County\"]} / {record[\"SiteName\"]}\r\n          <h1>{record[\"AQI\"]}</h1>\r\n          {record[\"Status\"]}\r\n        </div>\r\n        <br></br>\r\n\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td className=\"f7 bb b--black-20\" rowSpan=\"2\">PM<sub>2.5</sub> <br></br> (μg/m3) <br></br> 細懸浮微粒</td>\r\n              <td className=\"f7\">移動平均</td>\r\n              <td className=\"f3\">{record[\"PM2.5_AVG\"]}</td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td className=\"f7 bb b--black-20\">小時濃度</td>\r\n              <td className=\"f3 bb b--black-20\">{record[\"PM2.5\"]}</td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td className=\"f7 bb b--black-20\" rowSpan=\"2\">PM<sub>10</sub> <br></br> (μg/m3) <br></br> 懸浮微粒</td>\r\n              <td className=\"f7\">移動平均</td>\r\n              <td className=\"f3\">{record[\"PM10_AVG\"]}</td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td className=\"f7 bb b--black-20\">小時濃度</td>\r\n              <td className=\"f3 bb b--black-20\">{record[\"PM10\"]}</td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td className=\"f7 bb b--black-20\" rowSpan=\"2\">O<sub>3</sub> <br></br> (ppb) <br></br> 臭氧</td>\r\n              <td className=\"f7\">8小時移動平均</td>\r\n              <td className=\"f3\">{record[\"O3_8hr\"]}</td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td className=\"f7 bb b--black-20\">小時濃度</td>\r\n              <td className=\"f3 bb b--black-20\">{record[\"O3\"]}</td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td className=\"f7 bb b--black-20\" rowSpan=\"2\">CO <br></br> (ppm) <br></br> 一氧化碳</td>\r\n              <td className=\"f7\">8小時移動平均</td>\r\n              <td className=\"f3\">{record[\"CO_8hr\"]}</td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td className=\"f7 bb b--black-20\">小時濃度</td>\r\n              <td className=\"f3 bb b--black-20\">{record[\"CO\"]}</td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td className=\"f7 bb b--black-20\" rowSpan=\"2\">SO<sub>2</sub> <br></br> (ppb) <br></br> 二氧化硫</td>\r\n              <td></td>\r\n              <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td className=\"f7 bb b--black-20\">小時濃度</td>\r\n              <td className=\"f3 bb b--black-20\">{record[\"SO2\"]}</td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td className=\"f7 bb b--black-20\" rowSpan=\"2\">NO<sub>2</sub> <br></br> (ppb) <br></br> 二氧化氮</td>\r\n              <td></td>\r\n              <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td className=\"f7 bb b--black-20\">小時濃度</td>\r\n              <td className=\"f3 bb b--black-20\">{record[\"NO2\"]}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </fieldset >\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <DropdownMenu />\r\n      <AirQualityInfoCard records={gRecords} />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default AirQuality","import React, { useState, useRef } from \"react\"\r\nimport { md5, sha256, crc32 } from \"hash-wasm\";\r\n\r\nconst INIT_STATE = { md5: \"\", sha256: \"\", crc32: \"\" }\r\n\r\nconst Filehash = () => {\r\n\r\n  const [hashResult, setHashResult] = useState(INIT_STATE)\r\n  const [fileBuf, setFilebuf] = useState(null)\r\n  const fileName = useRef(\"\")\r\n  const [hashStatus, setHashStatus] = useState(\"...\")\r\n  const [enBtnGo, setenBtnGo] = useState(false)\r\n\r\n  const handleGo = async () => {\r\n\r\n    let newHashResult = { ...INIT_STATE }\r\n    setenBtnGo(false)\r\n\r\n    await Promise.all([md5(fileBuf), sha256(fileBuf), crc32(fileBuf)])\r\n      .then(values => {\r\n        newHashResult.md5 = values[0].toUpperCase()\r\n        newHashResult.sha256 = values[1].toUpperCase()\r\n        newHashResult.crc32 = values[2].toUpperCase()\r\n\r\n\r\n        setHashStatus(`Hash '${fileName.current}' done!`)\r\n        fileName.current = \"\"\r\n        setHashResult(newHashResult)\r\n      })\r\n  }\r\n\r\n  const handleChooseFile = async (e) => {\r\n    if (e.target.files.length === 0) {\r\n      setHashResult(INIT_STATE)\r\n      return\r\n    }\r\n\r\n    const reader = new FileReader()\r\n    reader.onerror = (r) => {\r\n      setenBtnGo(false)\r\n      setHashStatus(\"Error opening file\")\r\n    }\r\n\r\n    reader.onload = async (e) => {\r\n      setFilebuf(new Uint8Array(e.target.result))\r\n      setenBtnGo(true)\r\n      setHashStatus(`'${fileName.current}' ready, Press GO`)\r\n    }\r\n\r\n    reader.readAsArrayBuffer(e.target.files[0])\r\n\r\n    setHashResult(INIT_STATE)\r\n    fileName.current = e.target.files[0].name\r\n    setHashStatus(`Reading File...${e.target.files[0].name}`)\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-column justify-center center w-60\">\r\n      <fieldset className=\"ba br3 ma3 flex flex-column items-center\">\r\n        <legend>Inputs</legend>\r\n        <label className=\"bg-lightest-blue br3 w-60 db tc\" style={{ \"wordWrap\": \"break-word\" }}>\r\n          File: {fileName.current}\r\n          <input\r\n            className=\"w-80\"\r\n            style={{ \"opacity\": \"0\" }}\r\n            type=\"file\"\r\n            onChange={handleChooseFile}\r\n            disabled={enBtnGo}\r\n          />\r\n        </label>\r\n\r\n        <button\r\n          className=\"ba br3 ma2 w-60\"\r\n          disabled={!enBtnGo}\r\n          onClick={handleGo}\r\n        >\r\n          <h3>Go</h3>\r\n        </button>\r\n      </fieldset>\r\n\r\n      <fieldset className=\"ba br3 ma3\">\r\n        <legend>Outputs</legend>\r\n        <table className=\"center\">\r\n          <tbody>\r\n            <tr>\r\n              <td className=\"f7\">MD5</td>\r\n              <td>\r\n                <textarea\r\n                  className=\"tr br3\"\r\n                  readOnly={true}\r\n                  rows=\"2\" cols=\"15\"\r\n                  value={hashResult.md5}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"f7\">SHA256</td>\r\n              <td>\r\n                <textarea\r\n                  className=\"tr br3\"\r\n                  readOnly={true}\r\n                  rows=\"4\" cols=\"15\"\r\n                  value={hashResult.sha256}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"f7\">CRC32</td>\r\n              <td>\r\n                <textarea\r\n                  className=\"tr br3\"\r\n                  readOnly={true}\r\n                  rows=\"2\" cols=\"15\"\r\n                  value={hashResult.crc32}\r\n                />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </fieldset>\r\n\r\n      <fieldset className=\"ba br3 ma3\">\r\n        <legend>Status</legend>\r\n        {hashStatus}\r\n      </fieldset>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filehash\r\n","\nimport './App.css';\nimport TabGroup from \"../components/Tabgroup\"\nimport BinConverter from \"../components/Bin-converter\"\nimport QRcode from \"../components/Qrcode\"\nimport Stopwatch from \"../components/Stopwatch\"\nimport Weathercards from \"../components/Weathercards\"\nimport AirQuality from \"../components/AirQuality\"\nimport Filehash from \"../components/Filehash\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TabGroup\n        tabitmes={\n          [\n            { name: \"binary-converter\", bgcolor: \"aliceblue\", panel: <BinConverter /> },\n            { name: \"QR-Code\", bgcolor: \"cornsilk\", panel: <QRcode /> },\n            { name: \"File-hash\", bgcolor: \"lavender\", panel: <Filehash /> },\n            { name: \"Stopwatch\", bgcolor: \"yellowgreen\", panel: <Stopwatch /> },\n            { name: \"Weather\", bgcolor: \"wheat\", panel: <Weathercards /> },\n            { name: \"Air-Quality\", bgcolor: \"honeydew\", panel: <AirQuality /> },\n\n          ]\n        }\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}