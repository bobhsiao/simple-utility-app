{"version":3,"sources":["components/Tabgroup.js","components/Checkbox.js","components/CheckboxGroup.js","components/Bin-converter.js","components/Qrcode.js","components/Stopwatch.js","components/Weathercards.js","containers/App.js","index.js"],"names":["TabGroup","tabitmes","this","props","titleArr","map","item","idx","style","bgcolor","name","panelArr","panel","defaultIndex","Component","Checkbox","label","isSelected","onCheckboxChange","type","checked","onChange","CheckboxGroup","checkedArr","handler","checkboxArr","index","toString","padStart","className","BinConverter","useState","bitsVal","setBitsVal","binValue","setBinValue","decValue","setDecValue","hexValue","setHexValue","Array","fill","setCheckedArr","useEffect","toUpperCase","OutputTable","readOnly","maxLength","size","value","event","Number","target","newCheckedArr","newBitsVal","val","Math","pow","onClick","x","tmp","i","random","push","QRcode","imgsrc","setImgsrc","inputText","setInputtext","log","setLog","inputHandler","key","preventDefault","qrcodeHandler","length","QRcodeLib","toDataURL","then","url","catch","err","console","rows","cols","onKeyDown","src","alt","width","Stopwatch","componentDidMount","totalStr","makeTimeString","lapStr","updateTime","t","tMili","tSec","buttonText","setState","Object","assign","totalTime","lapTime","startButtonText","handleStart","startButtonState","tTotalStart","Date","getTime","tLapStart","timerID","setInterval","tTotalElpased","tPrevElpased","timeElapseLAP","enBtnReset","enBtnStart","enBtnLap","handlePause","clearInterval","addResult","resultIndex","handleLap","handleReset","resultRows","total","lap","newRow","state","disabled","locationArr","Weathercard","records","location","weatherElement","w","time","parameter","parameterName","wx","pop","mint","ci","maxt","startTime","endTime","wxIndex","parameterValue","titleTimeString","substring","replace","title","getTimeString","getWxImgUrl","height","start","end","tzoffset","getTimezoneOffset","today","now","toISOString","split","sDate","sHour","process","Weathercards","setLocation","gRecords","setRecords","isMounted","fetch","encodeURI","data","json","locationName","e","defaultValue","loc","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.765786e2.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\n\r\nclass TabGroup extends Component {\r\n\r\n\r\n  render() {\r\n    const { tabitmes } = this.props\r\n\r\n    const titleArr = tabitmes.map((item, idx) => {\r\n      return <Tab style={{ \"background\": item.bgcolor }} key={idx}>{item.name}</Tab>\r\n    })\r\n\r\n    const panelArr = tabitmes.map((item, idx) => {\r\n      return <TabPanel key={idx}>{item.panel}</TabPanel>\r\n    })\r\n\r\n    return (\r\n      < Tabs defaultIndex={0} >\r\n        <TabList>\r\n          {titleArr}\r\n        </TabList>\r\n\r\n        {panelArr}\r\n      </Tabs >\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default TabGroup\r\n","import React from 'react'\r\n\r\nconst Checkbox = ({ label, isSelected, onCheckboxChange }) => (\r\n  <label>\r\n    {label}\r\n    <input\r\n      type=\"checkbox\"\r\n      name={label}\r\n      checked={isSelected}\r\n      onChange={onCheckboxChange}\r\n    />\r\n  </label>\r\n)\r\n\r\nexport default Checkbox","import React from 'react'\r\nimport Checkbox from './Checkbox'\r\n\r\nconst CheckboxGroup = ({ checkedArr, handler }) => {\r\n  const checkboxArr = checkedArr.map((checked, index) => {\r\n    return <Checkbox\r\n      label={index.toString(10).padStart(2, \"0\")}\r\n      isSelected={checked}\r\n      onCheckboxChange={handler}\r\n      key={index.toString(10).padStart(2, \"0\")}\r\n    />\r\n  })\r\n\r\n  return (\r\n    <div className=\"f5 flex flex-row-reverse ma1\">\r\n      {checkboxArr}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckboxGroup","import React, { useState, useEffect } from \"react\"\r\nimport CheckboxGroup from './CheckboxGroup'\r\n\r\nconst BinConverter = () => {\r\n  // data flow: checkboxes/buttons => bitsVal => useEffect\r\n\r\n  const [bitsVal, setBitsVal] = useState(0)\r\n  const [binValue, setBinValue] = useState(\"\")\r\n  const [decValue, setDecValue] = useState(\"\")\r\n  const [hexValue, setHexValue] = useState(\"\")\r\n  const [checkedArr, setCheckedArr] = useState(Array(32).fill(false))\r\n\r\n  useEffect(() => {\r\n\r\n    setBitsVal(bitsVal)\r\n    setBinValue(bitsVal.toString(2).toUpperCase().padStart(32, \"0\"))\r\n    setDecValue(bitsVal.toString(10).toUpperCase().padStart(10, \"0\"))\r\n    setHexValue(bitsVal.toString(16).toUpperCase().padStart(8, \"0\"))\r\n\r\n  }, [bitsVal])\r\n\r\n  const handleCheckboxChange = (event) => {\r\n    const index = Number(event.target.name)\r\n    const newCheckedArr = [...checkedArr]  // clone\r\n    newCheckedArr[index] = !newCheckedArr[index]  // toggle\r\n\r\n    // handle checkboxes\r\n    setCheckedArr(newCheckedArr)\r\n\r\n    // handle bitsVal\r\n    let newBitsVal = bitsVal\r\n    const val = Math.pow(2, index)\r\n    newCheckedArr[index] ? newBitsVal = bitsVal + val : newBitsVal = bitsVal - val\r\n    setBitsVal(newBitsVal)\r\n  }\r\n\r\n  const handleToggle = () => {\r\n    let newBitsVal = 0\r\n    let newCheckedArr = checkedArr.map((x, index) => {\r\n      const tmp = Math.pow(2, index)\r\n      if (!x) newBitsVal += tmp\r\n      return !x\r\n    })\r\n\r\n    setBitsVal(newBitsVal)\r\n    setCheckedArr(newCheckedArr)\r\n  }\r\n\r\n  const handleRandomize = () => {\r\n    let newBitsVal = 0\r\n    let newCheckedArr = []\r\n    for (let i = 0; i < 32; i++) {\r\n      let random = Math.random() > 0.5 ? true : false\r\n      newCheckedArr.push(random)\r\n      if (random) {\r\n        newBitsVal += Math.pow(2, i)\r\n      }\r\n    }\r\n\r\n    setBitsVal(newBitsVal)\r\n    setCheckedArr(newCheckedArr)\r\n  }\r\n\r\n\r\n  const handleResetAll = () => {\r\n    setBitsVal(0)\r\n    setCheckedArr(Array(32).fill(false))\r\n  }\r\n\r\n\r\n  const handleCheckAll = () => {\r\n    setBitsVal(0xFFFFFFFF)\r\n    setCheckedArr(Array(32).fill(true))\r\n  }\r\n\r\n  const OutputTable = () => {\r\n    return <table className=\"center\">\r\n      <tbody>\r\n        <tr>\r\n          <td>Binary</td>\r\n          <td>\r\n            <input type=\"text\" name=\"binary\" readOnly={true} maxLength=\"32\" size=\"32\" style={{ \"textAlign\": \"right\" }}\r\n              value={binValue} />\r\n          </td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <td>Decimal</td>\r\n          <td>\r\n            <input type=\"text\" name=\"decimal\" readOnly={true} maxLength=\"32\" size=\"32\" style={{ \"textAlign\": \"right\" }}\r\n              value={decValue} />\r\n          </td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <td>Hex</td>\r\n          <td>\r\n            <input type=\"text\" name=\"Hex\" readOnly={true} maxLength=\"32\" size=\"32\" style={{ \"textAlign\": \"right\" }}\r\n              value={hexValue} />\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <fieldset className=\"ba br3 ma3 w-60 center\">\r\n        <legend>Inputs</legend>\r\n        <CheckboxGroup\r\n          checkedArr={checkedArr}\r\n          handler={handleCheckboxChange}\r\n        />\r\n      </fieldset>\r\n\r\n      <fieldset className=\"ba br3 ma3 w-60 center\">\r\n        <legend>Outputs</legend>\r\n        <OutputTable />\r\n      </fieldset>\r\n\r\n      <fieldset className=\"ba br3 ma3 justify-center w-60 center\">\r\n        <legend>Buttons</legend>\r\n\r\n        <button className=\"br3 ma1 pointer\" onClick={handleToggle}>\r\n          Toggle\r\n        </button>\r\n\r\n        <button className=\"br3 ma1 pointer\" onClick={handleRandomize}>\r\n          Randomize\r\n        </button>\r\n\r\n        <button className=\"br3 ma1 pointer\" onClick={handleResetAll}>\r\n          Reset all\r\n        </button>\r\n\r\n        <button className=\"br3 ma1 pointer\" onClick={handleCheckAll}>\r\n          Check all\r\n        </button>\r\n      </fieldset>\r\n    </div >\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default BinConverter\r\n","import React, { useState } from \"react\"\r\nimport QRcodeLib from 'qrcode'\r\n\r\nconst QRcode = () => {\r\n\r\n  const [imgsrc, setImgsrc] = useState(\"\")\r\n  const [inputText, setInputtext] = useState(\"\")\r\n  const [log, setLog] = useState(\"\")\r\n\r\n  const inputHandler = (event) => {\r\n\r\n    switch (event.type) {\r\n      case \"keydown\":\r\n        if (event.key === \"Enter\") {\r\n          event.preventDefault()\r\n          qrcodeHandler()\r\n        }\r\n        break\r\n\r\n      case \"change\":\r\n        setInputtext(event.target.value)\r\n        break\r\n\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  const clearHandler = (event) => {\r\n    setImgsrc(\"\")\r\n    setInputtext(\"\")\r\n    setLog(\"\")\r\n  }\r\n\r\n  const qrcodeHandler = () => {\r\n    if (inputText.length === 0) {\r\n      setImgsrc(\"\")\r\n      setLog(\"No input\")\r\n      return\r\n    }\r\n\r\n    QRcodeLib.toDataURL(inputText)\r\n      .then(url => {\r\n        setImgsrc(url)\r\n        setLog(inputText.length)\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <fieldset className=\"w-60 center flex ma3 ba br3 pa3 ma3\">\r\n        <legend> Input String </legend>\r\n        <textarea\r\n          className=\"tc f4 br3 center w-80\"\r\n          rows=\"4\"\r\n          cols=\"64\"\r\n          maxLength=\"256\"\r\n          value={inputText}\r\n          onChange={inputHandler}\r\n          onKeyDown={inputHandler}\r\n        >\r\n        </textarea>\r\n        <button className=\"br3 w-20\" onClick={qrcodeHandler} > GO </button>\r\n        <button className=\"br3 w-20\" onClick={clearHandler} > Clear </button>\r\n      </fieldset>\r\n\r\n      <fieldset className=\"flex flex-column w-60 center flex ma3 ba br3\">\r\n        <legend> QR Code </legend>\r\n        <img className=\"center\" src={imgsrc} alt=\"\" width=\"30%\" />\r\n        <h2 className=\"center\">{log}</h2>\r\n      </fieldset>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default QRcode\r\n","import { Component } from \"react\"\r\n\r\nclass Stopwatch extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.timerID = null\r\n    this.tTotalStart = 0\r\n    this.tTotalElpased = 0\r\n    this.tLapStart = 0\r\n    this.tPrevElpased = 0\r\n    this.startButtonState = \"start\"\r\n    this.resultIndex = 0\r\n\r\n    this.totalStr = \"\"\r\n    this.lapStr = \"\"\r\n\r\n    this.state = {\r\n      totalTime: \"\",\r\n      lapTime: \"\",\r\n      startButtonText: \"Start\",\r\n      resultRows: <tr></tr>,\r\n      enBtnReset: false,\r\n      enBtnStart: true,\r\n      enBtnLap: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.totalStr = this.makeTimeString(0)\r\n    this.lapStr = this.makeTimeString(0)\r\n    this.updateTime()\r\n  }\r\n\r\n  makeTimeString = (t) => {\r\n\r\n    const tMili = t % 1000\r\n    t = (t - tMili) / 1000 // convert t to second\r\n    const tSec = t % 60\r\n    const tMin = (t - tSec) / 60\r\n\r\n    return `${tMin.toString(10).padStart(2, \"0\")}:${tSec.toString(10).padStart(2, \"0\")}.${tMili.toString(10).padStart(3, \"0\")}`\r\n  }\r\n\r\n\r\n  updateTime = (buttonText = null) => {\r\n\r\n    this.setState(\r\n      Object.assign(\r\n        {\r\n          totalTime: this.totalStr,\r\n          lapTime: this.lapStr,\r\n        },\r\n        buttonText === null ? {} : { startButtonText: buttonText }\r\n      )\r\n    )\r\n\r\n  }\r\n\r\n  handleStart = () => {\r\n    switch (this.startButtonState) {\r\n      case \"start\":\r\n        this.tTotalStart = new Date().getTime()\r\n        this.tLapStart = this.tTotalStart\r\n\r\n        this.timerID = setInterval(() => {\r\n          this.tTotalElpased = new Date().getTime() - this.tTotalStart + this.tPrevElpased\r\n          let timeElapseLAP = new Date().getTime() - this.tLapStart\r\n\r\n          this.totalStr = this.makeTimeString(this.tTotalElpased)\r\n          this.lapStr = this.makeTimeString(timeElapseLAP)\r\n\r\n          this.updateTime(\"Stop\")\r\n        }, 10)\r\n\r\n        this.startButtonState = \"stop\"\r\n        this.setState({\r\n          enBtnReset: true,\r\n          enBtnStart: true,\r\n          enBtnLap: true,\r\n        })\r\n        break\r\n\r\n      case \"stop\":\r\n        this.handlePause()\r\n        break\r\n\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  handlePause = () => {\r\n    if (this.timerID != null) {\r\n      clearInterval(this.timerID)\r\n      this.timerID = null\r\n    }\r\n\r\n    this.tPrevElpased = this.tTotalElpased\r\n    this.startButtonState = \"start\"\r\n    this.updateTime(\"Start\")\r\n    this.setState({\r\n      enBtnReset: true,\r\n      enBtnStart: true,\r\n      enBtnLap: false,\r\n    })\r\n    this.addResult(this.resultIndex++, this.totalStr, this.lapStr)\r\n  }\r\n\r\n  handleLap = () => {\r\n    this.tLapStart = new Date().getTime()\r\n    this.addResult(this.resultIndex++, this.totalStr, this.lapStr)\r\n  }\r\n\r\n  handleReset = () => {\r\n    if (this.timerID != null) {\r\n      clearInterval(this.timerID)\r\n      this.timerID = null\r\n    }\r\n    this.tTotalStart = 0\r\n    this.tTotalElpased = 0\r\n    this.tLapStart = 0\r\n    this.tPrevElpased = 0\r\n    this.startButtonState = \"start\"\r\n    this.resultIndex = 0\r\n    this.totalStr = this.makeTimeString(0)\r\n    this.lapStr = this.makeTimeString(0)\r\n    this.updateTime(\"Start\")\r\n\r\n    this.setState({\r\n      resultRows: [],\r\n      enBtnReset: false,\r\n      enBtnStart: true,\r\n      enBtnLap: false,\r\n    })\r\n  }\r\n\r\n\r\n  addResult = (index, total, lap) => {\r\n    // make one table row\r\n    const newRow = <tr>\r\n      <td>{`#${(index + 1).toString().padStart(3, \"0\")}`}</td>\r\n      <td>{total}</td>\r\n      <td>{lap}</td>\r\n    </tr>\r\n\r\n    this.setState({\r\n      resultRows: [newRow, this.state.resultRows]\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"flex flex-row ma3 w-60 center\">\r\n          <fieldset className=\"w-50 ma3 br3\">\r\n            <legend>Total</legend>\r\n            <h1>{this.state.totalTime}</h1>\r\n          </fieldset>\r\n          <fieldset className=\"w-50 ma3 br3\">\r\n            <legend>LAP</legend>\r\n            <h1>{this.state.lapTime}</h1>\r\n          </fieldset>\r\n        </div>\r\n\r\n        <div className=\"flex flex-row ma3 w-60 center justify-center\">\r\n          <button\r\n            className=\"br3 w-20 pa3 ma3\"\r\n            disabled={!this.state.enBtnReset}\r\n            onClick={this.handleReset}\r\n          >\r\n            Reset\r\n          </button>\r\n\r\n          <button\r\n            className=\"br3 w-20 pa3 ma3\"\r\n            disabled={!this.state.enBtnStart}\r\n            onClick={this.handleStart}>\r\n            {this.state.startButtonText}\r\n          </button>\r\n\r\n          <button\r\n            className=\"br3 w-20 pa3 ma3\"\r\n            disabled={!this.state.enBtnLap}\r\n            onClick={this.handleLap}>\r\n            LAP\r\n          </button>\r\n        </div>\r\n\r\n        <fieldset className=\"flex flex-row ma3 w-60 center br3\">\r\n          <legend> Results </legend>\r\n          <table className=\"center f3 w-90\">\r\n            <thead>\r\n              <td>No.</td>\r\n              <td>Total</td>\r\n              <td>LAP</td>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.resultRows}\r\n            </tbody>\r\n          </table>\r\n        </fieldset>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Stopwatch\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nconst API_WEATHERFC_URL = \"https://simple-utility-api.herokuapp.com/weatherfc\"\r\nconst locationArr = [\r\n  \"基隆市\", \"臺北市\", \"新北市\", \"桃園市\",\r\n  \"新竹市\", \"新竹縣\", \"苗栗縣\", \"臺中市\",\r\n  \"彰化縣\", \"南投縣\", \"雲林縣\", \"嘉義市\",\r\n  \"嘉義縣\", \"臺南市\", \"高雄市\", \"屏東縣\",\r\n  \"宜蘭縣\", \"花蓮縣\", \"臺東縣\", \"澎湖縣\",\r\n  \"金門縣\", \"連江縣\",\r\n]\r\n\r\n\r\nconst Weathercards = () => {\r\n\r\n  const [location, setLocation] = useState(\"臺北市\"); // default location\r\n  const [gRecords, setRecords] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true  // fix warning\r\n    fetch(encodeURI(`${API_WEATHERFC_URL}/${location}`))\r\n      .then(data => data.json())\r\n      .then(({ records }) => {\r\n        if (isMounted) {\r\n          setRecords(records)\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n\r\n    return () => { isMounted = false };\r\n  }, [location])\r\n\r\n  if (!gRecords) {\r\n    return <div>Loading</div>\r\n  }\r\n\r\n  const { locationName } = gRecords.location[0]\r\n  return (\r\n    <div>\r\n      <select\r\n        className=\"pa3 ma3 br3 w-40\"\r\n        onChange={(e) => { setLocation(e.target.value) }}\r\n        defaultValue={location}\r\n      >\r\n        <option value=\"\" disabled>選擇縣市</option>\r\n        {\r\n          locationArr.map((loc, idx) => (\r\n            <option value={loc} key={idx}>{loc}</option>\r\n          ))\r\n        }\r\n      </select>\r\n\r\n      <fieldset className=\"flex flex-row justify-center center pa3 ma3 br3 w-40\">\r\n        <legend>{locationName}</legend>\r\n        <Weathercard records={gRecords} index={0} />\r\n        <Weathercard records={gRecords} index={1} />\r\n        <Weathercard records={gRecords} index={2} />\r\n      </fieldset>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst Weathercard = ({ records, index }) => {\r\n\r\n  if (!records.location) {\r\n    return <div></div>\r\n  }\r\n\r\n  const { weatherElement } = records.location[0]\r\n\r\n  const [wx, pop, mint, ci, maxt] = weatherElement.map(w => (w.time[index].parameter.parameterName))\r\n\r\n  const { startTime, endTime } = weatherElement[0].time[index]\r\n  const wxIndex = weatherElement[0].time[index].parameter.parameterValue\r\n  const titleTimeString =\r\n    `${startTime.substring(5, 16).replace(\"-\", \"/\").replace(\" \", \"-\")} ~ \\\r\n${endTime.substring(5, 16).replace(\"-\", \"/\").replace(\" \", \"-\")}`\r\n\r\n  return (\r\n    <div className=\"flex flex-column ma3 br3 pa3 bg-near-white\" style={{ \"width\": \"150px\", \"height\": \"200px\" }}>\r\n      <div title={titleTimeString}> {getTimeString(startTime, endTime)} </div>\r\n      <img src={getWxImgUrl(wxIndex)} alt={wx} title={wx} height=\"100px\" />\r\n      <div>🌡️ {mint} - {maxt}℃</div>\r\n      <div>☂ {pop}%</div>\r\n      <div>{ci}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst getTimeString = (start, end) => {\r\n  const tzoffset = (new Date()).getTimezoneOffset() * 60000; //offset in milliseconds\r\n  const today = (new Date(Date.now() - tzoffset)).toISOString().substring(0, 10)\r\n  const [sDate, sHour] = start.split(\" \")\r\n\r\n  if (sDate === today && (sHour === \"06:00:00\" || sHour === \"12:00:00\")) {\r\n    return (\"今日白天\")\r\n  } else if (sDate === today && sHour === \"00:00:00\") {\r\n    return (\"今日凌晨\")\r\n  } else if (sDate === today && sHour === \"18:00:00\") {\r\n    return (\"今晚明晨\")\r\n  } else if (sDate !== today && sHour === \"06:00:00\") {\r\n    return (\"明日白天\")\r\n  } else if (sDate !== today && sHour === \"18:00:00\") {\r\n    return (\"明日晚上\")\r\n  } else {\r\n    console.log(\"〇〇〇〇\", today, sDate, sHour)\r\n    return (\"〇〇〇〇\")\r\n  }\r\n}\r\n\r\nconst getWxImgUrl = (index) => {\r\n  return `${process.env.PUBLIC_URL}/images/${index.toString().padStart(2, \"0\")}.svg`\r\n}\r\n\r\nexport default Weathercards","\nimport './App.css';\nimport TabGroup from \"../components/Tabgroup\"\nimport BinConverter from \"../components/Bin-converter\"\nimport QRcode from \"../components/Qrcode\"\nimport Stopwatch from \"../components/Stopwatch\"\nimport Weathercards from \"../components/Weathercards\"\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TabGroup\n        tabitmes={\n          [\n            { name: \"binary-converter\", bgcolor: \"aliceblue\", panel: <BinConverter /> },\n            { name: \"QR-Code\", bgcolor: \"cornsilk\", panel: <QRcode /> },\n            { name: \"Stopwatch\", bgcolor: \"yellowgreen\", panel: <Stopwatch /> },\n            { name: \"Weather\", bgcolor: \"wheat\", panel: <Weathercards /> },\n          ]\n        }\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}