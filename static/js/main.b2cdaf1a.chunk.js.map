{"version":3,"sources":["components/Tabgroup.js","components/Checkbox.js","components/CheckboxGroup.js","components/Bin-converter.js","components/Qrcode.js","components/Stopwatch.js","components/Weathercards.js","containers/App.js","index.js"],"names":["TabGroup","tabitmes","this","props","titleArr","map","item","idx","style","bgcolor","name","panelArr","panel","defaultIndex","Component","Checkbox","label","isSelected","onCheckboxChange","type","checked","onChange","CheckboxGroup","checkedArr","handler","checkboxArr","index","toString","padStart","className","BinConverter","componentDidMount","updateValues","handleCheckboxChange","event","Number","target","newCheckedArr","state","handleRandomize","newbitsVal","i","random","Math","push","pow","bitsVal","handleResetAll","Array","fill","handleCheckAll","bitN","onoff","val","setState","Object","assign","binaryValue","toUpperCase","decimalValue","hexValue","OutputTable","readOnly","maxLength","size","value","onClick","QRcode","useState","imgsrc","setImgsrc","inputText","setInputtext","log","setLog","inputHandler","key","preventDefault","qrcodeHandler","length","QRcodeLib","toDataURL","then","url","catch","err","console","rows","cols","onKeyDown","src","alt","width","Stopwatch","totalStr","makeTimeString","lapStr","updateTime","t","tMili","tSec","buttonText","totalTime","lapTime","startButtonText","handleStart","startButtonState","tTotalStart","Date","getTime","tLapStart","timerID","setInterval","tTotalElpased","tPrevElpased","timeElapseLAP","enBtnReset","enBtnStart","enBtnLap","handlePause","clearInterval","addResult","resultIndex","handleLap","handleReset","resultRows","total","lap","newRow","disabled","locationArr","Weathercard","records","location","weatherElement","w","time","parameter","parameterName","wx","pop","mint","ci","maxt","startTime","endTime","wxIndex","parameterValue","getTimeString","getWxImgUrl","title","height","start","end","today","toISOString","substring","split","sDate","sHour","process","Weathercards","setLocation","gRecords","setRecords","useEffect","isMounted","fetch","encodeURI","data","json","locationName","e","defaultValue","loc","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2cdaf1a.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\n\r\nclass TabGroup extends Component {\r\n\r\n\r\n  render() {\r\n    const { tabitmes } = this.props\r\n\r\n    const titleArr = tabitmes.map((item, idx) => {\r\n      return <Tab style={{ \"background\": item.bgcolor }} key={idx}>{item.name}</Tab>\r\n    })\r\n\r\n    const panelArr = tabitmes.map((item, idx) => {\r\n      return <TabPanel key={idx}>{item.panel}</TabPanel>\r\n    })\r\n\r\n    return (\r\n      < Tabs defaultIndex={0} >\r\n        <TabList>\r\n          {titleArr}\r\n        </TabList>\r\n\r\n        {panelArr}\r\n      </Tabs >\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default TabGroup\r\n","import React from 'react'\r\n\r\nconst Checkbox = ({ label, isSelected, onCheckboxChange }) => (\r\n  <label>\r\n    {label}\r\n    <input\r\n      type=\"checkbox\"\r\n      name={label}\r\n      checked={isSelected}\r\n      onChange={onCheckboxChange}\r\n    />\r\n  </label>\r\n)\r\n\r\nexport default Checkbox","import React from 'react'\r\nimport Checkbox from './Checkbox'\r\n\r\nconst CheckboxGroup = ({ checkedArr, handler }) => {\r\n  const checkboxArr = checkedArr.map((checked, index) => {\r\n    return <Checkbox\r\n      label={index.toString(10).padStart(2, \"0\")}\r\n      isSelected={checked}\r\n      onCheckboxChange={handler}\r\n      key={index.toString(10).padStart(2, \"0\")}\r\n    />\r\n  })\r\n\r\n  return (\r\n    <div className=\"f5 flex flex-row-reverse ma1\">\r\n      {checkboxArr}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckboxGroup","import React, { Component } from \"react\"\r\nimport CheckboxGroup from './CheckboxGroup'\r\n\r\nclass BinConverter extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.bitsVal = 0\r\n    this.state = {\r\n      binaryValue: \"\",\r\n      decimalValue: \"\",\r\n      hexValue: \"\",\r\n      checkedArr: Array(32).fill(false),\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount = () => {\r\n    this.updateValues()\r\n  }\r\n\r\n\r\n  handleCheckboxChange = (event) => {\r\n    const index = Number(event.target.name)\r\n    const newCheckedArr = [...this.state.checkedArr]  // clone\r\n    newCheckedArr[index] = !newCheckedArr[index]  // toggle\r\n\r\n    this.updateValues(event.target.name, newCheckedArr[index], newCheckedArr)\r\n  }\r\n\r\n\r\n  handleRandomize = () => {\r\n    let newbitsVal = 0\r\n    let newCheckedArr = []\r\n    for (let i = 0; i < 32; i++) {\r\n      let random = Math.random() > 0.5 ? true : false\r\n      newCheckedArr.push(random)\r\n      if (random) {\r\n        newbitsVal += Math.pow(2, i)\r\n      }\r\n    }\r\n\r\n    this.bitsVal = newbitsVal\r\n    this.updateValues(-1, null, newCheckedArr)\r\n  }\r\n\r\n\r\n  handleResetAll = () => {\r\n    this.bitsVal = 0\r\n    this.updateValues(-1, null, Array(32).fill(false))\r\n  }\r\n\r\n\r\n  handleCheckAll = () => {\r\n    this.bitsVal = 0xFFFFFFFF\r\n    this.updateValues(-1, null, Array(32).fill(true))\r\n  }\r\n\r\n\r\n  updateValues = (bitN = -1, onoff = null, newCheckedArr = null) => {\r\n    // this function convert this.bitsVal to Outputs\r\n\r\n    if (bitN !== -1) {\r\n      // update this.bitsVal\r\n      const val = Math.pow(2, bitN)\r\n      onoff ? this.bitsVal += val : this.bitsVal -= val\r\n    }\r\n\r\n    this.setState(\r\n      Object.assign(\r\n        {\r\n          binaryValue: this.bitsVal.toString(2).toUpperCase().padStart(32, \"0\"),\r\n          decimalValue: this.bitsVal.toString(10).toUpperCase().padStart(10, \"0\"),\r\n          hexValue: this.bitsVal.toString(16).toUpperCase().padStart(8, \"0\"),\r\n        },\r\n        newCheckedArr === null ? {} : { checkedArr: newCheckedArr }\r\n      )\r\n    )\r\n  }\r\n\r\n\r\n  OutputTable = () => {\r\n    return <table className=\"center\">\r\n      <tbody>\r\n        <tr>\r\n          <td>Binary</td>\r\n          <td>\r\n            <input type=\"text\" name=\"binary\" readOnly={true} maxLength=\"32\" size=\"32\" style={{ \"textAlign\": \"right\" }}\r\n              value={this.state.binaryValue} />\r\n          </td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <td>Decimal</td>\r\n          <td>\r\n            <input type=\"text\" name=\"decimal\" readOnly={true} maxLength=\"32\" size=\"32\" style={{ \"textAlign\": \"right\" }}\r\n              value={this.state.decimalValue} />\r\n          </td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <td>Hex</td>\r\n          <td>\r\n            <input type=\"text\" name=\"Hex\" readOnly={true} maxLength=\"32\" size=\"32\" style={{ \"textAlign\": \"right\" }}\r\n              value={this.state.hexValue} />\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <fieldset className=\"ba br3 ma3 w-60 center\">\r\n          <legend>Inputs</legend>\r\n          <CheckboxGroup\r\n            checkedArr={this.state.checkedArr}\r\n            handler={this.handleCheckboxChange}\r\n          />\r\n        </fieldset>\r\n\r\n        <fieldset className=\"ba br3 ma3 w-60 center\">\r\n          <legend>Outputs</legend>\r\n          <this.OutputTable />\r\n        </fieldset>\r\n\r\n        <fieldset className=\"ba br3 ma3 justify-center w-60 center\">\r\n          <legend>Buttons</legend>\r\n\r\n          <button className=\"br3 ma1 pointer\" onClick={this.handleRandomize}>\r\n            Randomize\r\n          </button>\r\n\r\n          <button className=\"br3 ma1 pointer\" onClick={this.handleResetAll}>\r\n            Reset all\r\n          </button>\r\n\r\n          <button className=\"br3 ma1 pointer\" onClick={this.handleCheckAll}>\r\n            Check all\r\n          </button>\r\n        </fieldset>\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default BinConverter\r\n","import React, { useState } from \"react\"\r\nimport QRcodeLib from 'qrcode'\r\n\r\nconst QRcode = () => {\r\n\r\n  const [imgsrc, setImgsrc] = useState(\"\")\r\n  const [inputText, setInputtext] = useState(\"\")\r\n  const [log, setLog] = useState(\"\")\r\n\r\n  const inputHandler = (event) => {\r\n\r\n    switch (event.type) {\r\n      case \"keydown\":\r\n        if (event.key === \"Enter\") {\r\n          event.preventDefault()\r\n          qrcodeHandler()\r\n        }\r\n        break\r\n\r\n      case \"change\":\r\n        setInputtext(event.target.value)\r\n        break\r\n\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  const clearHandler = (event) => {\r\n    setImgsrc(\"\")\r\n    setInputtext(\"\")\r\n    setLog(\"\")\r\n  }\r\n\r\n  const qrcodeHandler = () => {\r\n    if (inputText.length === 0) {\r\n      setImgsrc(\"\")\r\n      setLog(\"No input\")\r\n      return\r\n    }\r\n\r\n    QRcodeLib.toDataURL(inputText)\r\n      .then(url => {\r\n        setImgsrc(url)\r\n        setLog(inputText.length)\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <fieldset className=\"w-60 center flex ma3 ba br3 pa3 ma3\">\r\n        <legend> Input String </legend>\r\n        <textarea\r\n          className=\"tc f4 br3 center w-80\"\r\n          rows=\"4\"\r\n          cols=\"64\"\r\n          maxLength=\"256\"\r\n          value={inputText}\r\n          onChange={inputHandler}\r\n          onKeyDown={inputHandler}\r\n        >\r\n        </textarea>\r\n        <button className=\"br3 w-20\" onClick={qrcodeHandler} > GO </button>\r\n        <button className=\"br3 w-20\" onClick={clearHandler} > Clear </button>\r\n      </fieldset>\r\n\r\n      <fieldset className=\"flex flex-column w-60 center flex ma3 ba br3\">\r\n        <legend> QR Code </legend>\r\n        <img className=\"center\" src={imgsrc} alt=\"\" width=\"30%\" />\r\n        <h2 className=\"center\">{log}</h2>\r\n      </fieldset>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default QRcode\r\n","import { Component } from \"react\"\r\n\r\nclass Stopwatch extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.timerID = null\r\n    this.tTotalStart = 0\r\n    this.tTotalElpased = 0\r\n    this.tLapStart = 0\r\n    this.tPrevElpased = 0\r\n    this.startButtonState = \"start\"\r\n    this.resultIndex = 0\r\n\r\n    this.totalStr = \"\"\r\n    this.lapStr = \"\"\r\n\r\n    this.state = {\r\n      totalTime: \"\",\r\n      lapTime: \"\",\r\n      startButtonText: \"Start\",\r\n      resultRows: <tr></tr>,\r\n      enBtnReset: false,\r\n      enBtnStart: true,\r\n      enBtnLap: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.totalStr = this.makeTimeString(0)\r\n    this.lapStr = this.makeTimeString(0)\r\n    this.updateTime()\r\n  }\r\n\r\n  makeTimeString = (t) => {\r\n\r\n    const tMili = t % 1000\r\n    t = (t - tMili) / 1000 // convert t to second\r\n    const tSec = t % 60\r\n    const tMin = (t - tSec) / 60\r\n\r\n    return `${tMin.toString(10).padStart(2, \"0\")}:${tSec.toString(10).padStart(2, \"0\")}.${tMili.toString(10).padStart(3, \"0\")}`\r\n  }\r\n\r\n\r\n  updateTime = (buttonText = null) => {\r\n\r\n    this.setState(\r\n      Object.assign(\r\n        {\r\n          totalTime: this.totalStr,\r\n          lapTime: this.lapStr,\r\n        },\r\n        buttonText === null ? {} : { startButtonText: buttonText }\r\n      )\r\n    )\r\n\r\n  }\r\n\r\n  handleStart = () => {\r\n    switch (this.startButtonState) {\r\n      case \"start\":\r\n        this.tTotalStart = new Date().getTime()\r\n        this.tLapStart = this.tTotalStart\r\n\r\n        this.timerID = setInterval(() => {\r\n          this.tTotalElpased = new Date().getTime() - this.tTotalStart + this.tPrevElpased\r\n          let timeElapseLAP = new Date().getTime() - this.tLapStart\r\n\r\n          this.totalStr = this.makeTimeString(this.tTotalElpased)\r\n          this.lapStr = this.makeTimeString(timeElapseLAP)\r\n\r\n          this.updateTime(\"Stop\")\r\n        }, 10)\r\n\r\n        this.startButtonState = \"stop\"\r\n        this.setState({\r\n          enBtnReset: true,\r\n          enBtnStart: true,\r\n          enBtnLap: true,\r\n        })\r\n        break\r\n\r\n      case \"stop\":\r\n        this.handlePause()\r\n        break\r\n\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  handlePause = () => {\r\n    if (this.timerID != null) {\r\n      clearInterval(this.timerID)\r\n      this.timerID = null\r\n    }\r\n\r\n    this.tPrevElpased = this.tTotalElpased\r\n    this.startButtonState = \"start\"\r\n    this.updateTime(\"Start\")\r\n    this.setState({\r\n      enBtnReset: true,\r\n      enBtnStart: true,\r\n      enBtnLap: false,\r\n    })\r\n    this.addResult(this.resultIndex++, this.totalStr, this.lapStr)\r\n  }\r\n\r\n  handleLap = () => {\r\n    this.tLapStart = new Date().getTime()\r\n    this.addResult(this.resultIndex++, this.totalStr, this.lapStr)\r\n  }\r\n\r\n  handleReset = () => {\r\n    if (this.timerID != null) {\r\n      clearInterval(this.timerID)\r\n      this.timerID = null\r\n    }\r\n    this.tTotalStart = 0\r\n    this.tTotalElpased = 0\r\n    this.tLapStart = 0\r\n    this.tPrevElpased = 0\r\n    this.startButtonState = \"start\"\r\n    this.resultIndex = 0\r\n    this.totalStr = this.makeTimeString(0)\r\n    this.lapStr = this.makeTimeString(0)\r\n    this.updateTime(\"Start\")\r\n\r\n    this.setState({\r\n      resultRows: [],\r\n      enBtnReset: false,\r\n      enBtnStart: true,\r\n      enBtnLap: false,\r\n    })\r\n  }\r\n\r\n\r\n  addResult = (index, total, lap) => {\r\n    // make one table row\r\n    const newRow = <tr>\r\n      <td>{`#${(index + 1).toString().padStart(3, \"0\")}`}</td>\r\n      <td>{total}</td>\r\n      <td>{lap}</td>\r\n    </tr>\r\n\r\n    this.setState({\r\n      resultRows: [newRow, this.state.resultRows]\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"flex flex-row ma3 w-60 center\">\r\n          <fieldset className=\"w-50 ma3 br3\">\r\n            <legend>Total</legend>\r\n            <h1>{this.state.totalTime}</h1>\r\n          </fieldset>\r\n          <fieldset className=\"w-50 ma3 br3\">\r\n            <legend>LAP</legend>\r\n            <h1>{this.state.lapTime}</h1>\r\n          </fieldset>\r\n        </div>\r\n\r\n        <div className=\"flex flex-row ma3 w-60 center justify-center\">\r\n          <button\r\n            className=\"br3 w-20 pa3 ma3\"\r\n            disabled={!this.state.enBtnReset}\r\n            onClick={this.handleReset}\r\n          >\r\n            Reset\r\n          </button>\r\n\r\n          <button\r\n            className=\"br3 w-20 pa3 ma3\"\r\n            disabled={!this.state.enBtnStart}\r\n            onClick={this.handleStart}>\r\n            {this.state.startButtonText}\r\n          </button>\r\n\r\n          <button\r\n            className=\"br3 w-20 pa3 ma3\"\r\n            disabled={!this.state.enBtnLap}\r\n            onClick={this.handleLap}>\r\n            LAP\r\n          </button>\r\n        </div>\r\n\r\n        <fieldset className=\"flex flex-row ma3 w-60 center br3\">\r\n          <legend> Results </legend>\r\n          <table className=\"center f3 w-90\">\r\n            <thead>\r\n              <td>No.</td>\r\n              <td>Total</td>\r\n              <td>LAP</td>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.resultRows}\r\n            </tbody>\r\n          </table>\r\n        </fieldset>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Stopwatch\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nconst API_WEATHERFC_URL = \"https://simple-utility-api.herokuapp.com/weatherfc\"\r\nconst locationArr = [\r\n  \"基隆市\", \"臺北市\", \"新北市\", \"桃園市\",\r\n  \"新竹市\", \"新竹縣\", \"苗栗縣\", \"臺中市\",\r\n  \"彰化縣\", \"南投縣\", \"雲林縣\", \"嘉義市\",\r\n  \"嘉義縣\", \"臺南市\", \"高雄市\", \"屏東縣\",\r\n  \"宜蘭縣\", \"花蓮縣\", \"臺東縣\", \"澎湖縣\",\r\n  \"金門縣\", \"連江縣\",\r\n]\r\n\r\n\r\nconst Weathercards = () => {\r\n\r\n  const [location, setLocation] = useState(\"臺北市\"); // default location\r\n  const [gRecords, setRecords] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true  // fix warning\r\n    fetch(encodeURI(`${API_WEATHERFC_URL}/${location}`))\r\n      .then(data => data.json())\r\n      .then(({ records }) => {\r\n        if (isMounted) {\r\n          setRecords(records)\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n\r\n    return () => { isMounted = false };\r\n  }, [location])\r\n\r\n  if (!gRecords) {\r\n    return <div></div>\r\n  }\r\n\r\n  const { locationName } = gRecords.location[0]\r\n  return (\r\n    <div className=\"flex flex-column w-40 center\">\r\n      <select\r\n        className=\"pa3 ma3 br3\"\r\n        onChange={(e) => { setLocation(e.target.value) }}\r\n        defaultValue={location}\r\n      >\r\n        <option value=\"\" disabled>選擇縣市</option>\r\n        {\r\n          locationArr.map((loc, idx) => (\r\n            <option value={loc} key={idx}>{loc}</option>\r\n          ))\r\n        }\r\n      </select>\r\n\r\n      <fieldset className=\"flex flex-row justify-center pa3 ma3 br3\">\r\n        <legend>{locationName}</legend>\r\n        <Weathercard records={gRecords} index={0} />\r\n        <Weathercard records={gRecords} index={1} />\r\n        <Weathercard records={gRecords} index={2} />\r\n      </fieldset>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst Weathercard = ({ records, index }) => {\r\n\r\n  if (!records.location) {\r\n    return <div></div>\r\n  }\r\n\r\n  const { weatherElement } = records.location[0]\r\n\r\n  const [wx, pop, mint, ci, maxt] = weatherElement.map(w => (w.time[index].parameter.parameterName))\r\n\r\n  const { startTime, endTime } = weatherElement[0].time[index]\r\n  const wxIndex = weatherElement[0].time[index].parameter.parameterValue\r\n\r\n  return (\r\n    <div className=\"flex flex-column ba ma3 br3 pa3\" style={{ \"width\": \"150px\", \"height\": \"200px\" }}>\r\n      <div>{getTimeString(startTime, endTime)}</div>\r\n      <img src={getWxImgUrl(wxIndex)} alt={wx} title={wx} height=\"100px\" />\r\n      <div>🌡️ {mint} - {maxt}℃</div>\r\n      <div>☂ {pop}%</div>\r\n      <div>{ci}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst getTimeString = (start, end) => {\r\n  const today = new Date().toISOString().substring(0, 10)\r\n  const [sDate, sHour] = start.split(\" \")\r\n\r\n  if (sDate === today && (sHour === \"06:00:00\" || sHour === \"12:00:00\")) {\r\n    return (\"今日白天\")\r\n  } else if (sDate === today && sHour === \"18:00:00\") {\r\n    return (\"今晚明晨\")\r\n  } else if (sDate !== today && sHour === \"06:00:00\") {\r\n    return (\"明日白天\")\r\n  } else if (sDate !== today && sHour === \"18:00:00\") {\r\n    return (\"明日晚上\")\r\n  } else {\r\n    console.log(\"〇〇〇〇\", sDate, sHour)\r\n    return (\"〇〇〇〇\")\r\n  }\r\n}\r\n\r\nconst getWxImgUrl = (index) => {  // TODO\r\n  return `${process.env.PUBLIC_URL}/images/${index.toString().padStart(2, \"0\")}.svg`\r\n}\r\n\r\nexport default Weathercards","\nimport './App.css';\nimport TabGroup from \"../components/Tabgroup\"\nimport BinConverter from \"../components/Bin-converter\"\nimport QRcode from \"../components/Qrcode\"\nimport Stopwatch from \"../components/Stopwatch\"\nimport Weathercards from \"../components/Weathercards\"\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TabGroup\n        tabitmes={\n          [\n            { name: \"binary-converter\", bgcolor: \"aliceblue\", panel: <BinConverter /> },\n            { name: \"QR-Code\", bgcolor: \"cornsilk\", panel: <QRcode /> },\n            { name: \"Stopwatch\", bgcolor: \"yellowgreen\", panel: <Stopwatch /> },\n            { name: \"Weather\", bgcolor: \"wheat\", panel: <Weathercards /> },\n          ]\n        }\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}